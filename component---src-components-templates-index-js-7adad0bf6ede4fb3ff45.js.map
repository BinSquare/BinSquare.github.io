{"version":3,"sources":["webpack:///./src/components/atoms/textEllipsis.js","webpack:///./src/components/templates/index.js","webpack:///./src/components/molecules/postListItem.js","webpack:///./src/components/atoms/pageButton.js","webpack:///./src/components/molecules/pagination.js","webpack:///./src/components/organisms/postList.js","webpack:///./src/components/molecules/postInfo.js"],"names":["StyledText","styled","p","props","line","TextEllipsis","text","color","BlogIndex","render","this","data","location","pageContext","site","siteMetadata","title","pageListSize","posts","allMarkdownRemark","edges","keywords","page","path","React","Component","PostItem","Link","TextContents","div","theme","postlistitem","content","info","Thumbnail","Image","PostListItem","node","isCover","frontmatter","cover","to","fields","slug","excerpt","date","category","fixed","childImageSharp","StyledLink","StyledButton","li","active","css","pagination","activeText","activeBack","defaultText","PageButton","link","children","StyledPagination","nav","Pagination","listSize","totalPage","numberOfPages","activePage","humanPageNumber","startPage","parseInt","endPage","totalList","Math","ceil","currentList","prevList","nextList","pgs","i","pageNum","push","key","className","length","PostList","map","Container","size","PostInfo"],"mappings":"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","file":"component---src-components-templates-index-js-7adad0bf6ede4fb3ff45.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledText = styled.p`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: ${props => props.line || 1};\n    -webkit-box-orient: vertical;\n    word-wrap: break-word;\n    line-height: 24px;\n    height: ${props => props.line * 24 || 24}px;\n\n    margin-bottom: 5px;\n    color: inherit;\n`;\n\nexport const TextEllipsis = ({ text, line, color }) => {\n    return (\n        <StyledText line={line} color={color}>\n            {text}\n        </StyledText>\n    );\n};\n\nexport default TextEllipsis;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"components/templates/layout\";\nimport PostList from \"components/organisms/postList\";\nimport SEO from \"components/seo\";\n\nclass BlogIndex extends React.Component {\n    render() {\n        const { data, location, pageContext } = this.props;\n        const { title, pageListSize } = data.site.siteMetadata;\n        const posts = data.allMarkdownRemark.edges;\n\n        return (\n            <Layout location={location} title={title}>\n                <SEO\n                    title=\"Main\"\n                    keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n                />\n                <PostList\n                    data={posts}\n                    page={pageContext}\n                    path={\"/\"}\n                    pageListSize={pageListSize}\n                />\n            </Layout>\n        );\n    }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query($skip: Int!, $limit: Int!) {\n        site {\n            siteMetadata {\n                title\n                pageListSize\n            }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            skip: $skip\n            limit: $limit\n        ) {\n            edges {\n                node {\n                    excerpt(pruneLength: 300)\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MM-DD-YYYY\")\n                        title\n                        category\n                        cover {\n                            childImageSharp {\n                                fixed(width: 120, height: 120) {\n                                    ...GatsbyImageSharpFixed\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport Image from \"gatsby-image\";\nimport TextEllipsis from \"components/atoms/textEllipsis\";\nimport PostInfo from \"components/molecules/postInfo\";\n\nconst PostItem = styled(Link)`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 40px;\n`;\n\nconst TextContents = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-right: 20px;\n\n    h2 {\n        margin: 0;\n        margin-bottom: 5px;\n        padding-bottom: 0;\n        border-bottom: none;\n        color: ${props => props.theme.postlistitem.title};\n    }\n\n    p:nth-child(2) {\n        color: ${props => props.theme.postlistitem.content};\n    }\n\n    div {\n        color: ${props => props.theme.postlistitem.info};\n\n        #circle {\n            background-color: ${props => props.theme.postlistitem.info};\n        }\n    }\n`;\n\nconst Thumbnail = styled(Image)`\n    width: 120px;\n    height: 120px;\n    border-radius: 10px;\n`;\n\nconst PostListItem = ({ node }) => {\n    const isCover = !!node.frontmatter.cover;\n\n    return (\n        <PostItem to={node.fields.slug}>\n            <TextContents>\n                <h2>\n                    <TextEllipsis line={1} text={node.frontmatter.title} />\n                </h2>\n\n                <TextEllipsis line={2} text={node.excerpt} />\n\n                <PostInfo\n                    date={node.frontmatter.date}\n                    category={node.frontmatter.category}\n                />\n            </TextContents>\n            {isCover && (\n                <div>\n                    <Thumbnail\n                        fixed={node.frontmatter.cover.childImageSharp.fixed}\n                    />\n                </div>\n            )}\n        </PostItem>\n    );\n};\n\nexport default PostListItem;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst StyledLink = styled(Link)`\n    padding: 0.5em;\n\n    font-weight: bold;\n    color: inherit;\n`;\n\nconst StyledButton = styled.li`\n    display: inline-block;\n    border-radius: 3px;\n    margin: 10px;\n\n    ${props =>\n        props.active\n            ? css`\n                  color: ${props => props.theme.pagination.activeText};\n                  background-color: ${props =>\n                      props.theme.pagination.activeBack};\n              `\n            : css`\n                  color: ${props => props.theme.pagination.defaultText};\n              `};\n\n    &:hover {\n        color: ${props => props.theme.pagination.activeText};\n        background-color: ${props => props.theme.pagination.activeBack};\n    }\n`;\n\nexport const PageButton = ({ link, children, active }) => {\n    return (\n        <StyledButton active={active}>\n            <StyledLink to={link}>{children}</StyledLink>\n        </StyledButton>\n    );\n};\n\nexport default PageButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PageButton from \"../atoms/pageButton\";\n\nconst StyledPagination = styled.nav`\n    margin: 1em auto;\n    text-align: center;\n\n    ul {\n        list-style-type: none;\n        margin: 0;\n        padding: 0.5em;\n    }\n`;\n\nconst Pagination = ({ page, path, listSize }) => {\n    const totalPage = page.numberOfPages;\n    const activePage = page.humanPageNumber;\n\n    const startPage = parseInt((activePage - 1) / listSize) * listSize + 1;\n    const endPage =\n        startPage + listSize - 1 < totalPage\n            ? startPage + listSize - 1\n            : totalPage;\n\n    const totalList = Math.ceil(totalPage / listSize);\n    const currentList = parseInt((activePage - 1) / listSize) + 1;\n\n    const prevList = currentList <= 1 ? null : (currentList - 1) * listSize;\n    const nextList =\n        currentList < totalList ? currentList * listSize + 1 : null;\n\n    let pgs = [];\n\n    for (let i = startPage; i <= endPage; i++) {\n        let pageNum = i !== 1 ? `/${i}` : \"\";\n\n        if (i === activePage) {\n            pgs.push(\n                <PageButton key={i} link={`${path}${pageNum}`} active={true}>\n                    {i}\n                </PageButton>\n            );\n        } else {\n            pgs.push(\n                <PageButton key={i} link={`${path}${pageNum}`}>\n                    {i}\n                </PageButton>\n            );\n        }\n    }\n\n    return (\n        <StyledPagination>\n            <ul>\n                {prevList && (\n                    <PageButton link={`${path}/${prevList}`}>\n                        <i className=\"fas fa-chevron-left\" />\n                    </PageButton>\n                )}\n                {pgs.length > 0 && pgs}\n                {nextList && (\n                    <PageButton link={`${path}/${nextList}`}>\n                        <i className=\"fas fa-chevron-right\" />\n                    </PageButton>\n                )}\n            </ul>\n        </StyledPagination>\n    );\n};\n\nexport default Pagination;\n","import React, { Fragment } from \"react\";\nimport PostListItem from \"components/molecules/postListItem\";\nimport Pagination from \"components/molecules/pagination\";\n\nconst PostList = ({ data, page, path, pageListSize }) => {\n    return (\n        <Fragment>\n            {data.map(({ node }) => {\n                return <PostListItem key={node.fields.slug} node={node} />;\n            })}\n            {page && (\n                <Pagination page={page} path={path} listSize={pageListSize} />\n            )}\n        </Fragment>\n    );\n};\n\nexport default PostList;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport Circle from \"components/atoms/circle\";\n\nconst Container = styled.div`\n    font-size: ${props => (props.size ? props.size + \"px\" : \"13px\")};\n\n    span {\n        vertical-align: middle;\n    }\n\n    a {\n        color: inherit;\n        vertical-align: middle;\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n\n    div {\n        margin: 0 10px;\n    }\n`;\n\nconst PostInfo = ({ category, date, size, link }) => {\n    return (\n        <Container size={size}>\n            {category && (\n                <Fragment>\n                    {link ? (\n                        <Link to={`/category/${category}`}>{category}</Link>\n                    ) : (\n                        <span>{category}</span>\n                    )}\n                    <Circle size={\"3\"} />\n                </Fragment>\n            )}\n\n            <span>{date}</span>\n        </Container>\n    );\n};\n\nexport default PostInfo;\n"],"sourceRoot":""}