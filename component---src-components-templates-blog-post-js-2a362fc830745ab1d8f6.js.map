{"version":3,"sources":["webpack:///./src/components/atoms/tagButton.js","webpack:///./src/components/molecules/tagList.js","webpack:///./src/components/molecules/recentPostItem.js","webpack:///./src/components/organisms/recentPostList.js","webpack:///./src/components/templates/blogPost.js"],"names":["StyledLink","styled","Link","StyledButton","span","props","theme","tag","text","back","TagButton","link","children","to","Container","div","TagList","data","map","node","key","display","Cover","image","recentpostitem","RecentPostItem","fields","slug","frontmatter","cover","childImageSharp","fixed","src","line","title","date","PostList","recentpostlist","header","category","RecentPostList","id","index","PostHeader","blogpost","hr","info","PostContent","content","default","quote","PostFooter","BlogPost","render","post","this","markdownRemark","siteTitle","site","siteMetadata","tags","recent","pageContext","location","activeMenu","description","excerpt","fluid","keywords","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery"],"mappings":"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","file":"component---src-components-templates-blog-post-js-2a362fc830745ab1d8f6.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst StyledLink = styled(Link)`\n    margin: 5px 10px 5px 0;\n`;\n\nconst StyledButton = styled.span`\n    padding: 5px 10px;\n    border-radius: 5px;\n\n    color: ${props => props.theme.tag.text};\n    background-color: ${props => props.theme.tag.back};\n    font-size: 15px;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nconst TagButton = ({ link, children }) => {\n    return (\n        <StyledLink to={link}>\n            <StyledButton>{children}</StyledButton>\n        </StyledLink>\n    );\n};\n\nexport default TagButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TagButton from \"../atoms/tagButton\";\n\nconst Container = styled.div``;\n\nconst TagList = ({ data }) => {\n    return (\n        <Container>\n            {data &&\n                data.map(node => (\n                    <TagButton key={node} link={`tags/${node}`}>\n                        #{node}\n                    </TagButton>\n                ))}\n        </Container>\n    );\n};\n\nexport default TagList;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport TextEllipsis from \"components/atoms/textEllipsis\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    padding: 0 10px 10px 10px;\n    width: 100%;\n\n    @media all and (min-width: 992px) {\n        display: ${props => props.display || \"inline-block\"};\n        width: 25%;\n    }\n`;\n\nconst Cover = styled(Link)`\n    display: inline-block;\n    margin: 0 !important;\n    width: 100%;\n    height: 100px;\n    background-image: url(${props => props.image});\n    background-size: cover;\n    background-position: 50% 50%;\n    border-radius: 10px;\n\n    &:hover {\n        text-decoration: underline #fff;\n    }\n\n    div {\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.6);\n        color: ${props => props.theme.recentpostitem.text};\n        padding: 10px;\n        border-radius: inherit;\n\n        p {\n            font-weight: bold;\n        }\n\n        span {\n            font-size: 12px;\n        }\n    }\n\n    @media all and (min-width: 992px) {\n        height: 120px;\n    }\n`;\n\nconst RecentPostItem = ({ data }) => {\n    const link = data.node.fields.slug;\n    const node = data.node.frontmatter;\n    const image = !!node.cover ? node.cover.childImageSharp.fixed.src : \"\";\n    return (\n        <Container>\n            <Cover image={image} to={link}>\n                <div>\n                    <TextEllipsis line={2} text={node.title} />\n                    <span>{node.date}</span>\n                </div>\n            </Cover>\n        </Container>\n    );\n};\n\nexport default RecentPostItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport RecentPostItem from \"components/molecules/recentPostItem\";\n\nconst PostList = styled.div`\n    #title {\n        font-weight: bold;\n        margin: 0;\n        padding: 0 10px 10px 10px;\n        color: ${props => props.theme.recentpostlist.header};\n\n        a {\n            color: ${props => props.theme.recentpostlist.category};\n            &:hover {\n                text-decoration: underline;\n            }\n        }\n    }\n`;\n\nconst RecentPostList = ({ category, data }) => {\n    return (\n        <PostList>\n            <div id=\"title\">\n                Recent \"<Link to={`/category/${category}`}>{category}</Link>\"\n                Posts\n            </div>\n            {data.map((node, index) => (\n                <RecentPostItem key={index} data={node} />\n            ))}\n        </PostList>\n    );\n};\n\nexport default RecentPostList;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport PostInfo from \"components/molecules/postInfo\";\nimport TagList from \"components/molecules/tagList\";\nimport RecentPostList from \"components/organisms/recentPostList\";\nimport Layout from \"./layout\";\nimport SEO from \"../seo\";\n\nconst PostHeader = styled.div`\n    h1 {\n        padding: 0;\n        margin-bottom: 10px;\n        border: none;\n        color: ${props => props.theme.blogpost.title};\n    }\n\n    hr {\n        margin: 20px 0 40px 0;\n        background-color: ${props => props.theme.blogpost.hr};\n    }\n\n    div {\n        color: ${props => props.theme.blogpost.info};\n        #circle {\n            background-color: ${props => props.theme.blogpost.info};\n        }\n    }\n`;\n\nconst PostContent = styled.div`\n    color: ${props => props.theme.blogpost.content.default};\n    a {\n        color: ${props => props.theme.blogpost.content.link};\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n\n    .gatsby-highlight {\n        margin: 24px 0;\n        border-radius: 10px;\n        pre[class*=\"language-\"] {\n            padding: 10px 15px;\n        }\n    }\n\n    blockquote {\n        margin-left: 0;\n        margin-right: 0;\n        padding-left: calc(0.8125rem - 1px);\n        border-left: 4px solid ${props => props.theme.blogpost.content.quote};\n        color: ${props => props.theme.blogpost.content.quote};\n    }\n`;\n\nconst PostFooter = styled.div`\n    margin-top: 40px;\n\n    hr {\n        margin: 20px 0;\n        background-color: ${props => props.theme.blogpost.hr};\n    }\n`;\n\nclass BlogPost extends React.Component {\n    render() {\n        const post = this.props.data.markdownRemark;\n        const siteTitle = this.props.data.site.siteMetadata.title;\n        const {\n            title,\n            date,\n            category,\n            tags,\n            cover\n        } = this.props.data.markdownRemark.frontmatter;\n        const { recent } = this.props.pageContext;\n\n        return (\n            <Layout\n                location={this.props.location}\n                title={siteTitle}\n                activeMenu={category}\n            >\n                <SEO\n                    title={title}\n                    description={post.excerpt}\n                    image={!!cover && cover.childImageSharp.fluid.src}\n                    keywords={tags || []}\n                />\n\n                <PostHeader>\n                    <h1>{title}</h1>\n                    <PostInfo category={category} date={date} link={true} />\n                    <hr />\n                </PostHeader>\n\n                <PostContent>\n                    <div dangerouslySetInnerHTML={{ __html: post.html }} />\n                </PostContent>\n\n                <PostFooter>\n                    <TagList data={tags} />\n                    <hr />\n                    {category && (\n                        <RecentPostList category={category} data={recent} />\n                    )}\n                </PostFooter>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                authorNickName\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MM-DD-YYYY\")\n                category\n                tags\n                cover {\n                    childImageSharp {\n                        fluid(maxWidth: 500) {\n                            src\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}